version: '3.8'

services:

  springboot-app:
    image: sarozme/movie-service:latest
    restart: always
    build: .
    ports:
      - 8000-8999:8088
    depends_on:
      - mysqldb
    environment:
      APP_PROFILE: prod
      MYSQL_HOST: mysqldb
      MYSQL_PORT: 3306
      MYSQL_DATABASE_NAME: movie-service
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
    networks:
      - spring-batch-mysql

  mysqldb:
    container_name: mysqldb
    image: mysql
    volumes:
      - /Users/saroz/mysql/data:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: movie-service
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    networks:
      - spring-batch-mysql

  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysqldb
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - 8070:8070
    depends_on:
      - mysqldb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
     image: confluentinc/cp-kafka:latest
     depends_on:
       - zookeeper
     ports:
       - 29092:29092
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    # Uncomment to expose the storage port for testing
#    ports:
#       - 3306:3306

    # The zipkin process services the UI, and also exposes a POST endpoint that
    # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mysql
        # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
        # Uncomment to enable scribe
        # - SCRIBE_ENABLED=true
        # Uncomment to enable self-tracing
        # - SELF_TRACING_ENABLED=true
        # Uncomment to enable debug logging
        # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
        # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
        # Uncomment if you set SCRIBE_ENABLED=true
        # - 9410:9410
    depends_on:
      - storage





networks:
  spring-batch-mysql:

